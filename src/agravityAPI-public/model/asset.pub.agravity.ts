/**
 * Agravity OpenAPI Documentation - Public Functions
 * <h1>Agravity API Reference</h1>This is the public API description of Agravity GmbH.<br/><h2>Resources</h2><ul> <li>Collection type management</li> <li>Collections management</li> <li>Assets management</li> <li>Assets operations</li> <li>Assets publishing</li> <li>Collection Sharing (consume share)</li> <li>Secure Upload (validate + upload file)</li> <li>Download ZIP</li> <li>Search</li> <li>General management</li></ul><h2> Operations</h2>Agravity API performs the following operations:<ul> <li>List / get single collection types</li> <li>List / get single collections</li> <li>List / get single  assets</li> <li>Operations on assets like: blobs, rotate, resize, similar, collections, customfields, download</li> <li>List / get single published asset</li> <li>Search for assets or collections</li> <li>Get version of deployment</li></ul><br/><b>API key is needed to access these endpoints.</b><br/><br/>Copyright Â© Agravity GmbH 2024. All Rights Reserved
 *
 * The version of the OpenAPI document: 7.2.0
 * Contact: office@agravity.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CollTypeItem } from './collTypeItem.pub.agravity';
import { AssetBlob } from './assetBlob.pub.agravity';
import { ArtificialIntelligenceGroup } from './artificialIntelligenceGroup.pub.agravity';

export interface Asset {
	id?: string;
	entity_type?: string;
	name?: string;
	asset_type?: string;
	duplicates?: Array<string>;
	text_content?: string;
	ai_groups?: Array<ArtificialIntelligenceGroup>;
	keywords?: Array<string>;
	orig_blob?: AssetBlob;
	blobs?: Array<AssetBlob>;
	collections?: Array<string>;
	failed_reason?: string;
	region_of_origin?: string;
	availability?: string;
	available_from?: string | null;
	available_to?: string | null;
	custom?: any;
	items?: Array<CollTypeItem>;
	translations?: { [key: string]: { [key: string]: object } };
	role?: Asset.RoleEnum;
	description?: string;
	add_properties?: { [key: string]: any };
	status?: string;
	created_date?: string | null;
	created_by?: string;
	modified_date?: string | null;
	modified_by?: string;
	pk?: string;
	_etag?: string;
}
export namespace Asset {
	export type RoleEnum = 'NONE' | 'VIEWER' | 'EDITOR';
	export const RoleEnum = {
		None: 'NONE' as RoleEnum,
		Viewer: 'VIEWER' as RoleEnum,
		Editor: 'EDITOR' as RoleEnum
	};
}
