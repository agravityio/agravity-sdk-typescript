/**
 * Agravity OpenAPI Documentation - Private Functions
 * <h1>Agravity API Reference</h1>This is the full API description of Agravity GmbH.<br/><h2>Resources</h2><ul> <li>Collection type management</li> <li>Collections management</li> <li>Assets management</li> <li>Assets operations</li> <li>Assets publishing</li> <li>Assets versioning</li> <li>Sharing collection</li> <li>Secure upload to collection</li> <li>Download ZIP</li> <li>Search</li> <li>General management</li> <li>Authentication management</li> <li>Blob management</li> <li>Queue management</li> <li>Structure management</li> <li>Bulk get all data from collection / collection type</li></ul><h2> Operations</h2>Agravity API performs the following operations:<ul> <li>Create / update / list / delete collection types</li> <li>Create / update / list / delete collections</li> <li>Create / update / list / delete assets</li> <li>Operations on assets like: move to collection, renew asset(through queue pipe), rotate, resize, etc.</li> <li>Publish / de-publish an asset or specific variants of an asset</li> <li>Create / delete version of asset</li> <li>Bulk download of Assets</li> <li>Search for assets or collections</li> <li>Authenticated access like e.g. getting access to blobs directly (for upload on folder or generate SAS token)</li> <li>List / delete blobs</li> <li>Create structures based on blob storage input</li></ul><br/>Copyright Â© Agravity GmbH 2023. All Rights Reserved
 *
 * The version of the OpenAPI document: 6.0.2
 * Contact: office@agravity.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Metadata } from './metadata.agravity';

export interface AssetBlob {
	blob_type?: AssetBlob.BlobTypeEnum;
	name?: string;
	container?: string;
	size?: number;
	extension?: string;
	content_type?: string;
	md5?: string;
	techdata?: Array<Metadata>;
	add_data?: { [key: string]: object };
	width?: number | null;
	height?: number | null;
	maxwidthheight?: number | null;
	quality?: number | null;
	orientation?: AssetBlob.OrientationEnum | null;
	colorspace?: string;
	profile?: string;
	transparency?: boolean | null;
	mode?: string;
	target?: string;
	filter?: string;
	dpi_x?: number | null;
	dpi_y?: number | null;
	perhash?: string;
	dominantcolor?: string;
	depth?: number | null;
	animated?: boolean | null;
	duration?: number | null;
	videocodec?: string;
	videobitrate?: number | null;
	fps?: number | null;
	colormode?: string;
	audiocodec?: string;
	audiosamplerate?: string;
	audiochanneloutput?: string;
	audiobitrate?: number | null;
	author?: string;
	language?: string;
	wordcount?: number | null;
	pages?: number | null;
	title?: string;
	encoding_name?: string;
	encoding_code?: string;
	url?: string;
	size_readable?: string;
	downloadable?: boolean | null;
	expires?: string | null;
}
export namespace AssetBlob {
	export type BlobTypeEnum = 'UNKNOWN' | 'IMAGE' | 'VIDEO' | 'AUDIO' | 'DOCUMENT' | 'TEXT' | 'OTHER';
	export const BlobTypeEnum = {
		Unknown: 'UNKNOWN' as BlobTypeEnum,
		Image: 'IMAGE' as BlobTypeEnum,
		Video: 'VIDEO' as BlobTypeEnum,
		Audio: 'AUDIO' as BlobTypeEnum,
		Document: 'DOCUMENT' as BlobTypeEnum,
		Text: 'TEXT' as BlobTypeEnum,
		Other: 'OTHER' as BlobTypeEnum
	};
	export type OrientationEnum = 'PORTRAIT' | 'LANDSCAPE' | 'SQUARE';
	export const OrientationEnum = {
		Portrait: 'PORTRAIT' as OrientationEnum,
		Landscape: 'LANDSCAPE' as OrientationEnum,
		Square: 'SQUARE' as OrientationEnum
	};
}
